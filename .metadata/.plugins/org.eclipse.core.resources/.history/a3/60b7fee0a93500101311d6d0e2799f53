#include "stm32f303xe.h"

// Simple blocking delay (not precise, but works)
void delay(uint32_t count) {
    while(count--);
}

// Initialize UART1 (PA9=TX, PA10=RX)
void UART1_Init(void) {
    // 1. Enable clocks
    RCC->AHBENR  |= RCC_AHBENR_GPIOAEN;      // Enable GPIOA
    RCC->APB2ENR |= RCC_APB2ENR_USART1EN;     // Enable USART1

    // 2. Configure PA9 (TX) and PA10 (RX) as Alternate Function
    GPIOA->MODER   &= ~(GPIO_MODER_MODER9 | GPIO_MODER_MODER10);  // Clear
    GPIOA->MODER   |= (2 << GPIO_MODER_MODER9_Pos) | (2 << GPIO_MODER_MODER10_Pos); // AF mode
    GPIOA->AFR[1]  |= (7 << (4*(9-8))) | (7 << (4*(10-8)));       // AF7 = USART1
    GPIOA->OSPEEDR |= (3 << (2*9)) | (3 << (2*10));               // High speed

    // 3. Configure USART1 (115200 baud @ 8MHz)
    USART1->BRR = 0x4C;   // 8MHz / 115200 ≈ 69.44 → BRR = 0x4C (76)
    USART1->CR1 = USART_CR1_UE | USART_CR1_TE | USART_CR1_RE; // Enable UART, TX, RX
}

// Send a single byte
void UART1_Send(uint8_t data) {
    while(!(USART1->ISR & USART_ISR_TXE));  // Wait for TX empty
    USART1->TDR = data;
}

// Receive a byte (blocking, with timeout)
uint8_t UART1_Receive(void) {
    uint32_t timeout = 100000; // Adjust based on your clock speed
    while(!(USART1->ISR & USART_ISR_RXNE)) {
        if(--timeout == 0) return 0xFF; // Timeout
    }
    return USART1->RDR;
}

// Send a string (for debugging)
void UART1_SendString(char *str) {
    while(*str) {
        UART1_Send(*str++);
    }
}


// Send a simple command to wake up BNO085 (check datasheet for exact bytes)
void BNO085_Init(void) {
    uint8_t wakeup_cmd[] = {0xAA, 0x00, 0x01, 0x00}; // Example header
    for(int i = 0; i < 4; i++) {
        UART1_Send(wakeup_cmd[i]);
    }
    delay(100000); // Short delay
}

int main(void) {
    UART1_Init();      // Initialize UART
    BNO085_Init();     // Wake up BNO085

    while(1) {
        // Check if data is available
        if(USART1->ISR & USART_ISR_RXNE) {
            uint8_t byte = UART1_Receive();
            // Do something with the byte (e.g., light an LED)
        }
    }
}
